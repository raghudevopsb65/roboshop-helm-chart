apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  labels:
    app: {{ .Values.appName }}
    ephoc: "{{ .Values.ephoc }}"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.appName }}
        ephoc: "{{ .Values.ephoc }}"
    spec:
      containers:
      - name: {{.Values.appName}}
        image: 633788536644.dkr.ecr.us-east-1.amazonaws.com/{{.Values.appName}}
        imagePullPolicy: Always
        {{- if .Values.configMap.enabled }}
        envFrom:
        - configMapRef:
            name: {{ .Values.appName }}
        {{- end }}
        {{- if .Values.externalSecret.enabled }}
        - secretRef:
            name: {{ .Values.appName }}
        {{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        livenessProbe:
          httpGet:
            path: {{ .Values.health.endpoint }}
            port: {{ .Values.health.port }}
          initialDelaySeconds: {{ .Values.health.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.health.liveness.periodSeconds }}
        readinessProbe:
          httpGet:
            path: {{ .Values.health.endpoint }}
            port: {{ .Values.health.port }}
          initialDelaySeconds: {{ .Values.health.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.health.readiness.periodSeconds }}

